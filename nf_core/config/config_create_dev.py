#!/usr/bin/env python

import create_config_scope

## Params

configname = create_config_scope.ask_config_name()
configtype = create_config_scope.ask_config_type()
maxresources = create_config_scope.retrieve_computational_resources()

configuser = create_config_scope.ask_user_name()

## Query container engines
# TODO

## Ask if cache dir required
# TODO

## Write parsed config to file

f = open(configname + ".config", "a")
## TODO move to dictionary and function to write dictionary
f.write(
    "/*\nConfig auto-generated by nf-core tools (https://nf-co.re).\nPlease check config before using, no warranty is provided to the accuracy of the output!\n*/\n\n"
)
f.write(
    "params.config_profile_description = '"
    + configuser["profile_contact"]
    + " config generated by nf-core tools'"
    + "\n"
)
## TODO: dynamically insert hadnle if exists
f.write("params.config_profile_contact = '" + configuser["profile_contact"] + "'\n")
f.write("params.max_cpus = " + str(maxresources["max_cpus"]) + "\n")
f.write("params.max_memory = " + str("{:.0f}".format(maxresources["max_memory"])) + ".GB" + "\n")
f.close()


##################################

## Get operating system
# os_type = subprocess.run(["uname"], stdout=subprocess.PIPE).stdout.decode("utf-8")
# print(os_type)
